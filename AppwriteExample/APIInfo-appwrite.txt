requestId:{ endpoint = "/account"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/email"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/logs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "logs"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "clientCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngine"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngineVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceBrand"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceModel"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "event"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "time"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/name"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/password"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "oldPassword"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/prefs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false })
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/prefs"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/recovery"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/recovery"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordAgain"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/sessions"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/sessions"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "sessions"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngine"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngineVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "current"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceBrand"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceModel"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "provider"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerToken"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerUid"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/sessions/{sessionId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "sessionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/sessions/{sessionId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "sessionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngine"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngineVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "current"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceBrand"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceModel"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "provider"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerToken"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerUid"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/verification"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/account/verification"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/browsers/{code}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "code" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "quality" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/credit-cards/{code}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "code" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "quality" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/favicon"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "url" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/flags/{code}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "code" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "quality" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/image"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "url" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/initials"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "name" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "color" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "background" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/avatars/qr"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "text" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "size" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "margin" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "download" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "collections"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "array"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "default"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "label"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "list"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "required"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "type"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "read"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 InternalNode ({ name = "write"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "array"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "default"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "label"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "list"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "required"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "type"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "array"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "default"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "label"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "list"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "required"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "type"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "read"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "write"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "rules"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "array"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "default"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "key"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "label"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "list"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "required"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "type"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}/documents"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "filters" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderField" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderCast" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "documents"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}/documents"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "data"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "parentDocument"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "parentProperty"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "parentPropertyType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "read"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "write"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}/documents/{documentId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "documentId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}/documents/{documentId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "documentId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/database/collections/{collectionId}/documents/{documentId}"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "collectionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "documentId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "data"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "read"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "write"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$collection"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "functions"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "scheduleNext"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedulePrevious"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "execute"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "scheduleNext"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedulePrevious"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "scheduleNext"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedulePrevious"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] );
 InternalNode ({ name = "execute"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "scheduleNext"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedulePrevious"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/executions"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "executions"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "exitCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stderr"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stdout"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "time"
  payload = Fuzzable { primitiveType = Number
                       defaultValue = "RESTlerNumber"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "trigger"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/executions"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "data"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "exitCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stderr"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stdout"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "time"
  payload = Fuzzable { primitiveType = Number
                       defaultValue = "RESTlerNumber"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "trigger"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/executions/{executionId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "executionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "exitCode"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stderr"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "stdout"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "time"
  payload = Fuzzable { primitiveType = Number
                       defaultValue = "RESTlerNumber"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "trigger"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/tag"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateUpdated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "events"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "runtime"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedule"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "scheduleNext"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "schedulePrevious"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "tag"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "timeout"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "vars"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/tags"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "tags"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "command"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "size"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/tags"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "command"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "size"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/tags/{tagId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "tagId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/functions/{functionId}/tags/{tagId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "functionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "tagId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "command"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "functionId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "size"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/health"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/anti-virus"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/cache"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/db"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/certificates"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/functions"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/logs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/tasks"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/usage"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/queue/webhooks"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/storage/local"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/health/time"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:None
#############
requestId:{ endpoint = "/locale"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "continent"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "continentCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "country"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "currency"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "eu"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/continents"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "continents"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/countries"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "countries"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/countries/eu"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "countries"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/countries/phones"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "phones"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/currencies"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "currencies"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "decimalDigits"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "namePlural"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "rounding"
  payload = Fuzzable { primitiveType = Number
                       defaultValue = "RESTlerNumber"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "symbol"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "symbolNative"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/locale/languages"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "languages"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "code"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "nativeName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "files"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "mimeType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "signature"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sizeOriginal"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "mimeType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "signature"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sizeOriginal"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "mimeType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "signature"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sizeOriginal"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "read"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 InternalNode ({ name = "write"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "$permissions"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "mimeType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "signature"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sizeOriginal"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}/download"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}/preview"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "width" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "height" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "gravity" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "quality" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "borderWidth" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "borderColor" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "borderRadius" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "opacity" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Number
                       defaultValue = "RESTlerNumber"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "rotation" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "background" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "output" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/storage/files/{fileId}/view"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "fileId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "teams"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = false
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}"
  xMsPath = None
  method = Put }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "dateCreated"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}/memberships"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "memberships"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "confirm"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "invited"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "joined"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "teamId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}/memberships"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "url"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "confirm"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "invited"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "joined"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "teamId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}/memberships/{membershipId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "membershipId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}/memberships/{membershipId}"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "membershipId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "confirm"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "invited"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "joined"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "teamId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/teams/{teamId}/memberships/{membershipId}/status"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "teamId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "membershipId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "secret"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "confirm"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "invited"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "joined"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "roles"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] );
 LeafNode { name = "teamId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [ {name = "search" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "limit" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "offset" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None };
 {name = "orderType" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false } 
 serialization = None } ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 InternalNode ({ name = "users"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users"
  xMsPath = None
  method = Post }
requestParameters:{path = ParameterList 
 ( seq [  ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = false
  isReadOnly = false };
 LeafNode { name = "password"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/logs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "logs"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "clientCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngine"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngineVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceBrand"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceModel"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "event"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "time"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] ) ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/prefs"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false })
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/prefs"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(LeafNode { name = ""
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false })
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/sessions"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/sessions"
  xMsPath = None
  method = Get }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = "sessions"
  payload = None
  propertyType = Array
  isRequired = true
  isReadOnly = false }, seq [ InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngine"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientEngineVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientType"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "clientVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "countryName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "current"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceBrand"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceModel"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "deviceName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "expire"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "ip"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osCode"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osName"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "osVersion"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "provider"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerToken"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "providerUid"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "userId"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) ] );
 LeafNode { name = "sum"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/sessions/{sessionId}"
  xMsPath = None
  method = Delete }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None };
 {name = "sessionId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [  ] )) ] }
response:Some {bodyResponse = <null>
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/status"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
requestId:{ endpoint = "/users/{userId}/verification"
  xMsPath = None
  method = Patch }
requestParameters:{path = ParameterList 
 ( seq [ {name = "userId" 
 payload = LeafNode { name = ""
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } 
 serialization = None } ] ) 
 header = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 query = [ (Schema, ParameterList 
 ( seq [  ] )) ] 
 body = [ (Schema, ParameterList 
 ( seq [ {name = "__body__" 
 payload = InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ) 
 serialization = None } ] )) ] }
response:Some {bodyResponse = Some(InternalNode ({ name = ""
  payload = None
  propertyType = Object
  isRequired = true
  isReadOnly = false }, seq [ LeafNode { name = "$id"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "email"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "emailVerification"
  payload = Fuzzable { primitiveType = Bool
                       defaultValue = "RESTlerBool"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "name"
  payload = Fuzzable { primitiveType = String
                       defaultValue = "RESTlerString"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "passwordUpdate"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "prefs"
  payload = Fuzzable { primitiveType = Object
                       defaultValue = "RESTlerObject"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "registration"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false };
 LeafNode { name = "status"
  payload = Fuzzable { primitiveType = Int
                       defaultValue = "RESTlerInt"
                       exampleValue = None
                       parameterName = None
                       dynamicObject = None }
  isRequired = true
  isReadOnly = false } ] ))
 headerResponse = []
 linkAnnotations = seq []}
#############
